#include<map>
#include<stack>
#include<queue>
#include<cstdio>
#include<string>
#include<bitset>
#include<vector>
#include<cstring>
#include<complex>
#include<iostream>
#include<assert.h>
#include<algorithm>
using namespace std;
#define fi first
#define se second
#define il inline
#define mp make_pair
#define pb push_back
#define ll long long
#define gc getchar()
#define inf 1001001001
#define Ri register int
#define Pii pair<int,int>
#define gmax(a,b) (a)=max((a),(b))
#define gmin(a,b) (a)=min((a),(b))
#define infll 1001001001001001001LL
#define dbg(vari) cerr<<#vari<<" = "<<(vari)<<endl
#define FO(x) freopen(#x".in","r",stdin),freopen(#x".out","w",stdout);
il int read(){bool f=true;Ri x=0;char ch;while(!isdigit(ch=gc))if(ch=='-')f=false;while(isdigit(ch)){x=(x<<1)+(x<<3)+ch-'0';ch=gc;}return f?x:-x;}
#define gi read()
#define B 1800000 
int bk[]={0,1061551,1135249,1114002,1056078,1184477,1230647,1217989,1182265,1188112,1220375,1215284,1190018,1196288,1211572,1210977,1195835,1186141,1202539,1213015,1188896,1186700,1218629,1203158,1191499,1171464,1207693,1188383,1182305,1155941,1210603,1188199,1159353,1136037,1193197,1189564,1130092,1124036,1180060,1175804,1117380,1184477,1230647,1217989,1182266,1222798,1246392,1240923,1221437,1239047,1249267,1247679,1238314,1242505,1246733,1246835,1242476,1240192,1243802,1246243,1240284,1238738,1247006,1243098,1241000,1232067,1246842,1237721,1235964,1220047,1245999,1235182,1221224,1207919,1240426,1236413,1202583,1207456,1237947,1236399,1204711,1188112,1220375,1215284,1190018,1239047,1249267,1247679,1238315,1221706,1233313,1235070,1225529,1242211,1246429,1245563,1242365,1231536,1237083,1239823,1235961,1238153,1246025,1242584,1239615,1228610,1236280,1236892,1234249,1224017,1241845,1235510,1224427,1217300,1235679,1235653,1219889,1212426,1235273,1234211,1211113,1196288,1211572,1210977,1195835,1242505,1246733,1246835,1242476,1242211,1246429,1245563,1242366,1221152,1224645,1223983,1221780,1239460,1241831,1244882,1240168,1237758,1243886,1241873,1238687,1225993,1227485,1227154,1226084,1234348,1241293,1240138,1237556,1227170,1237457,1238785,1226641,1214977,1224499,1224372,1214329,1186141,1202539,1213015,1188896,1240192,1243802,1246243,1240284,1231536,1237083,1239823,1235961,1239460,1241831,1244882,1240169,1207516,1215081,1229572,1209633,1232354,1240620,1241247,1232626,1230473,1235728,1236950,1236918,1232589,1239061,1240995,1235489,1214508,1218401,1234041,1216881,1214964,1229781,1231799,1213910,1186700,1218629,1203158,1191499,1238738,1247006,1243098,1241000,1238153,1246025,1242584,1239615,1237758,1243886,1241873,1238687,1232354,1240620,1241247,1232627,1217871,1236766,1224102,1226155,1234776,1245584,1237012,1240687,1228366,1243245,1234660,1232119,1225029,1237839,1237084,1225082,1214262,1231649,1229748,1214011,1171464,1207693,1188383,1182305,1232067,1246842,1237721,1235964,1228610,1236280,1236892,1234249,1225993,1227485,1227154,1226084,1230473,1235728,1236950,1236918,1234776,1245584,1237012,1240688,1196316,1215418,1201613,1211425,1222231,1244477,1230768,1228005,1213306,1233662,1230090,1217301,1212095,1224755,1222959,1211592,1155941,1210603,1188199,1159353,1220047,1245999,1235182,1221224,1224017,1241845,1235510,1224427,1234348,1241293,1240138,1237556,1232589,1239061,1240995,1235489,1228366,1243245,1234660,1232119,1222231,1244477,1230768,1228006,1176766,1222168,1198837,1186478,1204835,1239889,1230829,1201959,1203270,1232826,1227689,1200446,1136037,1193197,1189564,1130092,1207919,1240426,1236413,1202583,1217300,1235679,1235653,1219889,1227170,1237457,1238785,1226641,1214508,1218401,1234041,1216881,1225029,1237839,1237084,1225082,1213306,1233662,1230090,1217301,1204835,1239889,1230829,1201960,1148223,1199988,1201096,1144067,1194884,1232887,1230563,1188635,1124036,1180060,1175804,1117380,1207456,1237947,1236399,1204711,1212426,1235273,1234211,1211113,1214977,1224499,1224372,1214329,1214964,1229781,1231799,1213910,1214262,1231649,1229748,1214011,1212095,1224755,1222959,1211592,1203270,1232826,1227689,1200446,1194884,1232887,1230563,1188636,1133123,1184277,1183624,1130961}; 
int kb[]={0,745207,819054,813374,795604,778133,784302,865607,886330,880111,870674,853604,843054,872243,880520,877277,864594,841792,870945,868271,882031,868025,862976,835774,878700,861197,874020,865668,843058,857679,881516,864726,871844,860704,821078,875769,867938,862508,850651,836902,832687,868931,872779,850859,830489,800964,856612,857795,858118,836012,815421,796972,847805,848479,842892,839341,790585,865607,886330,880111,870674,853604,868525,892531,897696,895097,884318,880157,892531,899284,899828,897111,891664,890468,898638,897506,898015,896940,891295,893252,899248,892882,897916,893486,886627,898829,897924,893914,896103,888435,887300,897471,897753,888945,889348,876071,889837,897203,895079,876341,884506,864680,889133,893317,888449,867091,866135,875977,891164,889939,889176,867752,843837,872243,880520,877277,864594,862874,892531,899284,899828,897111,891664,876598,886332,889464,890184,885475,881662,895612,896523,898740,896465,894830,884876,890148,893090,892488,890953,887596,892540,895834,895874,895618,893132,880888,892360,891170,891203,888770,887947,878181,891180,894260,890240,884351,872059,882737,890474,890527,887549,875603,867610,884344,891392,891676,883684,846909,870945,868271,882031,868025,862976,880085,898638,897506,898015,896940,891078,895612,896523,898740,896465,894830,871962,895465,876696,884938,882679,874588,892475,897262,893779,895968,893008,885578,898554,894680,893689,895038,891423,877635,887108,887376,879181,893875,870350,895398,893070,895708,888454,893333,878058,892974,890420,891999,885922,873846,880455,877660,892091,877770,877973,836408,878700,861197,874020,865668,859162,893252,899248,892882,897916,893486,883998,890148,893090,892488,890953,887615,892475,897262,893779,895968,893008,864744,887862,876855,878554,881855,868691,883626,897562,889427,893950,893291,877713,891751,891008,890874,890190,888836,883020,895446,891171,897222,886632,876893,882509,884969,876579,888791,870266,867695,890624,883581,885857,888351,852336,857679,881516,864726,871844,860704,872511,898829,897924,893914,896103,890315,892540,895834,895874,895618,893132,885127,898554,894680,893689,895038,891423,883626,897562,889427,893950,893291,868419,887532,891789,875624,890965,883099,882492,896951,895672,889883,895155,884536,888370,894489,892256,885592,890647,874759,894172,890801,889566,885665,876095,876120,891640,880345,887823,880345,822633,875769,867938,862508,850651,849775,887300,897471,897753,888945,889348,881166,892360,891170,891203,888770,887947,877635,887108,887376,879181,893875,870263,891751,891008,890874,890190,888836,884722,896951,895672,889883,895155,872592,869652,872307,884142,854727,874815,867847,893155,896608,888562,880702,878622,877398,888487,889791,882126,871634,863611,891954,878407,883725,881177,850656,832687,868931,872779,850859,830489,855518,889837,897203,895079,876341,884506,878181,891180,894260,890240,884351,876396,895398,893070,895708,888454,893333,882895,895446,891171,897222,886632,883503,888370,894489,892256,885592,890647,873809,893155,896608,888562,880702,868372,850393,879868,878069,857091,851461,853581,886886,893925,892078,866347,863800,868623,883816,889191,882380,868857,805696,856612,857795,858118,836012,815421,864680,889133,893317,888449,867091,869143,882737,890474,890527,887549,875603,876654,892974,890420,891999,885922,872805,882509,884969,876579,888791,870266,875050,894172,890801,889566,885665,876048,877398,888487,889791,882126,871634,860886,886886,893925,892078,866347,854509,827287,868324,861303,862111,810824,845526,880768,886539,887223,874783,854347,796972,847805,848479,842892,839341,803255,875977,891164,889939,889176,867752,861492,884344,891392,891676,883684,856079,880455,877660,892091,877770,877973,858165,890624,883581,885857,888351,860661,876120,891640,880345,887823,880345,852038,891954,878407,883725,881177,858937,868623,883816,889191,882380,868857,844073,880768,886539,887223,874783,854348,804872,850557,851964,849130,852894,422568};
bool f[100];
bool chk(int x){
	int s=0,y=x;
	int p[11],pn=0; 
	while(x){
		s+=(p[++pn]=x%10);
		x/=10;
	}
	if(s&1)return 0;
	memset(f,0,sizeof(f));
	f[0]=1;
	for(Ri i=1;i<=pn;i++)
		for(Ri j=s/2;j>=p[i];j--)f[j]|=f[j-p[i]];
	return f[s/2];
}
int qzh(int r){
	int ans=0,i;
	for(i=0;i*B<=r;i++)ans+=kb[i];
	i--;
	for(i=i*B+1;i<=r;i++)ans+=chk(i);
	return ans;
}
int main(){
	FO(count);
	int l=gi,r=gi;
	printf("%d",qzh(r)-qzh(l-1));
	return 0;
}

